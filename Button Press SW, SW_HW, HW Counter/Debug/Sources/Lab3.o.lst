   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"Lab3.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	NVIC_EnableIRQ:
  26              	.LFB101:
  27              		.file 1 "R:\\EE344\\Labs\\Lab3Repo\\Lab3\\CMSIS/core_cm4.h"
   1:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /**************************************************************************//**
   2:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  * @file     core_cm4.h
   3:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  * @version  V3.30
   5:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  * @date     24. February 2014
   6:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  *
   7:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  * @note
   8:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  *
   9:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  ******************************************************************************/
  10:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* Copyright (c) 2009 - 2014 ARM LIMITED
  11:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
  12:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    All rights reserved.
  13:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  14:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  15:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    - Redistributions of source code must retain the above copyright
  16:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  17:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  18:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  19:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****      documentation and/or other materials provided with the distribution.
  20:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****      to endorse or promote products derived from this software without
  22:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****      specific prior written permission.
  23:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    *
  24:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    ---------------------------------------------------------------------------*/
  36:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
  37:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
  38:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #if defined ( __ICCARM__ )
  39:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  40:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #endif
  41:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
  42:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  43:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define __CORE_CM4_H_GENERIC
  44:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
  45:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #ifdef __cplusplus
  46:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  extern "C" {
  47:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #endif
  48:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
  49:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  50:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  51:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
  52:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  53:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  54:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
  55:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  56:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****      Unions are used for effective representation of core registers.
  57:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
  58:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  59:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****      Function-like macros are used to allow more efficient code.
  60:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
  61:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
  62:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
  63:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /*******************************************************************************
  64:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  *                 CMSIS definitions
  65:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  ******************************************************************************/
  66:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \ingroup Cortex_M4
  67:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   @{
  68:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
  69:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
  70:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /*  CMSIS CM4 definitions */
  71:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x03)                                   /*!< [31:16] CMSIS HAL m
  72:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x20)                                   /*!< [15:0]  CMSIS HAL s
  73:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | \
  74:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  75:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
  76:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define __CORTEX_M                (0x04)                                   /*!< Cortex-M Core      
  77:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
  78:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
  79:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #if   defined ( __CC_ARM )
  80:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  81:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  82:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define __STATIC_INLINE  static __inline
  83:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
  84:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #elif defined ( __GNUC__ )
  85:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  86:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  87:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define __STATIC_INLINE  static inline
  88:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
  89:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #elif defined ( __ICCARM__ )
  90:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  91:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  92:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define __STATIC_INLINE  static inline
  93:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
  94:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #elif defined ( __TMS470__ )
  95:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
  96:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define __STATIC_INLINE  static inline
  97:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
  98:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #elif defined ( __TASKING__ )
  99:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 100:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 101:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define __STATIC_INLINE  static inline
 102:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 103:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #elif defined ( __CSMC__ )		/* Cosmic */
 104:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define __packed
 105:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 106:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define __INLINE         inline                                    /*use -pc99 on compile line !<
 107:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define __STATIC_INLINE  static inline
 108:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 109:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #endif
 110:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 111:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not. For this, __FPU_PRESENT has to be checked p
 112:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** */
 113:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #if defined ( __CC_ARM )
 114:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #if defined __TARGET_FPU_VFP
 115:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #if (__FPU_PRESENT == 1)
 116:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****       #define __FPU_USED       1
 117:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #else
 118:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 119:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****       #define __FPU_USED       0
 120:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #endif
 121:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #else
 122:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #define __FPU_USED         0
 123:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #endif
 124:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 125:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #elif defined ( __GNUC__ )
 126:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 127:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #if (__FPU_PRESENT == 1)
 128:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****       #define __FPU_USED       1
 129:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #else
 130:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 131:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****       #define __FPU_USED       0
 132:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #endif
 133:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #else
 134:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #define __FPU_USED         0
 135:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #endif
 136:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 137:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #elif defined ( __ICCARM__ )
 138:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #if defined __ARMVFP__
 139:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #if (__FPU_PRESENT == 1)
 140:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****       #define __FPU_USED       1
 141:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #else
 142:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 143:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****       #define __FPU_USED       0
 144:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #endif
 145:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #else
 146:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #define __FPU_USED         0
 147:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #endif
 148:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 149:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #elif defined ( __TMS470__ )
 150:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 151:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #if (__FPU_PRESENT == 1)
 152:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****       #define __FPU_USED       1
 153:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #else
 154:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 155:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****       #define __FPU_USED       0
 156:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #endif
 157:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #else
 158:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #define __FPU_USED         0
 159:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #endif
 160:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 161:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #elif defined ( __TASKING__ )
 162:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #if defined __FPU_VFP__
 163:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #if (__FPU_PRESENT == 1)
 164:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****       #define __FPU_USED       1
 165:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #else
 166:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 167:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****       #define __FPU_USED       0
 168:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #endif
 169:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #else
 170:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #define __FPU_USED         0
 171:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #endif
 172:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 173:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #elif defined ( __CSMC__ )		/* Cosmic */
 174:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #if ( __CSMC__ & 0x400)		// FPU present for parser
 175:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #if (__FPU_PRESENT == 1)
 176:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****       #define __FPU_USED       1
 177:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #else
 178:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 179:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****       #define __FPU_USED       0
 180:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #endif
 181:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #else
 182:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #define __FPU_USED         0
 183:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #endif
 184:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #endif
 185:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 186:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #include <stdint.h>                      /* standard types definitions                      */
 187:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 188:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 189:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #include <core_cm4_simd.h>               /* Compiler specific SIMD Intrinsics               */
 190:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 191:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 192:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 193:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #ifndef __CMSIS_GENERIC
 194:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 195:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 196:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 197:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 198:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* check device defines and use defaults */
 199:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 200:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #ifndef __CM4_REV
 201:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #define __CM4_REV               0x0000
 202:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 203:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #endif
 204:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 205:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #ifndef __FPU_PRESENT
 206:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #define __FPU_PRESENT             0
 207:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 208:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #endif
 209:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 210:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #ifndef __MPU_PRESENT
 211:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #define __MPU_PRESENT             0
 212:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 213:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #endif
 214:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 215:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 216:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 217:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 218:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #endif
 219:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 220:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 221:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #define __Vendor_SysTickConfig    0
 222:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 223:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #endif
 224:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #endif
 225:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 226:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 227:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /**
 228:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 229:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 230:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 231:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \li to specify the access to peripheral variables.
 232:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 233:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** */
 234:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #ifdef __cplusplus
 235:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 236:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #else
 237:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 238:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #endif
 239:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 240:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 241:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 242:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /*@} end of group Cortex_M4 */
 243:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 244:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 245:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 246:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /*******************************************************************************
 247:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  *                 Register Abstraction
 248:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   Core Register contain:
 249:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   - Core Register
 250:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   - Core NVIC Register
 251:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   - Core SCB Register
 252:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   - Core SysTick Register
 253:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   - Core Debug Register
 254:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   - Core MPU Register
 255:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   - Core FPU Register
 256:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  ******************************************************************************/
 257:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 258:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 259:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** */
 260:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 261:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \ingroup    CMSIS_core_register
 262:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 263:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \brief  Core Register type definitions.
 264:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   @{
 265:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
 266:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 267:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 268:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
 269:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** typedef union
 270:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
 271:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   struct
 272:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   {
 273:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #if (__CORTEX_M != 0x04)
 274:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved                           */
 275:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #else
 276:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 277:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 278:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 279:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #endif
 280:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 281:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 282:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 283:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 284:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 285:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 286:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 287:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** } APSR_Type;
 288:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 289:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 290:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 291:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
 292:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** typedef union
 293:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
 294:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   struct
 295:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   {
 296:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 297:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 298:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 299:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 300:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** } IPSR_Type;
 301:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 302:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 303:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 304:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
 305:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** typedef union
 306:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
 307:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   struct
 308:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   {
 309:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 310:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #if (__CORTEX_M != 0x04)
 311:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved                           */
 312:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #else
 313:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 314:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 315:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 316:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #endif
 317:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 318:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 319:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 320:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 321:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 322:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 323:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 324:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 325:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 326:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** } xPSR_Type;
 327:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 328:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 329:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 330:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
 331:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** typedef union
 332:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
 333:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   struct
 334:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   {
 335:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 336:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 337:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 338:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 339:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 340:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 341:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** } CONTROL_Type;
 342:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 343:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /*@} end of group CMSIS_CORE */
 344:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 345:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 346:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \ingroup    CMSIS_core_register
 347:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 348:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 349:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   @{
 350:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
 351:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 352:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 353:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
 354:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** typedef struct
 355:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
 356:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 357:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED0[24];
 358:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 359:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RSERVED1[24];
 360:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 361:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED2[24];
 362:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 363:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED3[24];
 364:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 365:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED4[56];
 366:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 367:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED5[644];
 368:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 369:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** }  NVIC_Type;
 370:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 371:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 372:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 373:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL << NVIC_STIR_INTID_Pos)            /*!< STIR: I
 374:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 375:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /*@} end of group CMSIS_NVIC */
 376:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 377:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 378:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \ingroup  CMSIS_core_register
 379:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 380:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 381:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   @{
 382:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
 383:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 384:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 385:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
 386:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** typedef struct
 387:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
 388:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 389:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 390:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 391:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 392:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 393:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 394:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 395:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 396:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 397:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 398:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 399:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 400:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 401:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 402:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 403:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 404:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 405:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 406:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 407:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED0[5];
 408:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 409:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** } SCB_Type;
 410:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 411:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* SCB CPUID Register Definitions */
 412:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 413:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 414:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 415:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 416:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 417:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 418:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 419:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 420:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 421:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 422:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 423:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 424:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 425:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 426:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 427:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 428:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 429:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 430:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 431:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 432:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 433:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 434:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 435:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 436:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 437:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 438:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 439:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 440:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 441:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 442:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 443:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 444:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 445:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 446:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 447:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 448:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 449:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 450:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 451:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 452:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 453:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 454:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 455:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 456:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 457:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 458:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 459:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 460:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 461:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 462:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 463:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 464:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 465:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 466:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 467:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 468:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 469:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 470:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 471:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 472:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 473:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 474:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 475:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 476:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 477:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 478:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 479:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 480:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 481:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 482:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 483:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 484:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* SCB System Control Register Definitions */
 485:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 486:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 487:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 488:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 489:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 490:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 491:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 492:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 493:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 494:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* SCB Configuration Control Register Definitions */
 495:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 496:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 497:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 498:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 499:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 500:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 501:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 502:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 503:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 504:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 505:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 506:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 507:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 508:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 509:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 510:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 511:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 512:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 513:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 514:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 515:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 516:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 517:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 518:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 519:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 520:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 521:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 522:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 523:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 524:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 525:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 526:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 527:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 528:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 529:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 530:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 531:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 532:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 533:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 534:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 535:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 536:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 537:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 538:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 539:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 540:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 541:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 542:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 543:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 544:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 545:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 546:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 547:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 548:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 549:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 550:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 551:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 552:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 553:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 554:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 555:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 556:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 557:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 558:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 559:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 560:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 561:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 562:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 563:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 564:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 565:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 566:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 567:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 568:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 569:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 570:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 571:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 572:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 573:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 574:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 575:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 576:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 577:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 578:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 579:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 580:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 581:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 582:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 583:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 584:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 585:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 586:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 587:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 588:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 589:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 590:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 591:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 592:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /*@} end of group CMSIS_SCB */
 593:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 594:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 595:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \ingroup  CMSIS_core_register
 596:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 597:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 598:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   @{
 599:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
 600:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 601:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 602:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
 603:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** typedef struct
 604:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
 605:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED0[1];
 606:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 607:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 608:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** } SCnSCB_Type;
 609:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 610:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 611:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 612:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL << SCnSCB_ICTR_INTLINESNUM_Pos)      /*!< ICTR: I
 613:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 614:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* Auxiliary Control Register Definitions */
 615:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 616:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 617:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 618:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 619:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 620:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 621:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 622:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 623:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 624:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 625:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 626:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 627:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 628:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL << SCnSCB_ACTLR_DISMCYCINT_Pos)        /*!< ACTLR: 
 629:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 630:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 631:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 632:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 633:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \ingroup  CMSIS_core_register
 634:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 635:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 636:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   @{
 637:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
 638:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 639:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 640:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
 641:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** typedef struct
 642:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
 643:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 644:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 645:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 646:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 647:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** } SysTick_Type;
 648:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 649:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* SysTick Control / Status Register Definitions */
 650:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 651:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 652:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 653:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 654:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 655:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 656:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 657:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 658:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 659:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 660:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 661:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 662:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* SysTick Reload Register Definitions */
 663:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 664:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 665:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 666:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* SysTick Current Register Definitions */
 667:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 668:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 669:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 670:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* SysTick Calibration Register Definitions */
 671:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 672:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 673:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 674:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 675:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 676:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 677:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 678:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 679:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 680:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /*@} end of group CMSIS_SysTick */
 681:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 682:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 683:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \ingroup  CMSIS_core_register
 684:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 685:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
 686:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   @{
 687:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
 688:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 689:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 690:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
 691:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** typedef struct
 692:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
 693:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __O  union
 694:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   {
 695:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 696:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 697:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 698:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 699:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED0[864];
 700:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 701:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED1[15];
 702:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 703:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED2[15];
 704:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 705:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED3[29];
 706:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __O  uint32_t IWR;                     /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register  
 707:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t IRR;                     /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register   
 708:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t IMCR;                    /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 709:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED4[43];
 710:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __O  uint32_t LAR;                     /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register        
 711:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t LSR;                     /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register        
 712:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED5[6];
 713:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t PID4;                    /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 714:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t PID5;                    /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 715:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t PID6;                    /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 716:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t PID7;                    /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 717:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t PID0;                    /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 718:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t PID1;                    /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 719:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t PID2;                    /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 720:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t PID3;                    /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 721:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t CID0;                    /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 722:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t CID1;                    /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 723:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t CID2;                    /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 724:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t CID3;                    /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 725:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** } ITM_Type;
 726:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 727:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 728:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 729:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 730:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 731:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* ITM Trace Control Register Definitions */
 732:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 733:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 734:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 735:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                             /*!< ITM 
 736:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 737:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 738:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                             /*!< ITM 
 739:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 740:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 741:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 742:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 743:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 744:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 745:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 746:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 747:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 748:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 749:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 750:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 751:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 752:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 753:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 754:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 755:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 756:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 757:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 758:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 759:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* ITM Integration Write Register Definitions */
 760:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 761:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 762:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 763:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* ITM Integration Read Register Definitions */
 764:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 765:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 766:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 767:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 768:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 769:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 770:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 771:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* ITM Lock Status Register Definitions */
 772:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 773:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 774:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 775:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 776:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 777:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 778:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 779:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL << ITM_LSR_Present_Pos)                   /*!< ITM 
 780:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 781:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 782:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 783:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 784:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \ingroup  CMSIS_core_register
 785:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 786:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 787:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   @{
 788:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
 789:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 790:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 791:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
 792:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** typedef struct
 793:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
 794:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register                
 795:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register            
 796:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register              
 797:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 798:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register            
 799:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register              
 800:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 801:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 802:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0           
 803:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0                 
 804:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0             
 805:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED0[1];
 806:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1           
 807:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1                 
 808:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1             
 809:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED1[1];
 810:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2           
 811:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2                 
 812:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2             
 813:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED2[1];
 814:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3           
 815:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3                 
 816:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3             
 817:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** } DWT_Type;
 818:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 819:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* DWT Control Register Definitions */
 820:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 821:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 822:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 823:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
 824:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 825:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 826:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 827:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 828:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 829:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 830:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 831:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 832:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 833:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 834:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 835:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 836:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 837:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 838:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
 839:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 840:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 841:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
 842:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 843:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 844:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 845:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 846:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 847:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
 848:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 849:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 850:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 851:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 852:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 853:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 854:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 855:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 856:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
 857:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 858:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 859:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 860:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 861:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 862:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 863:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 864:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 865:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 866:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 867:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 868:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 869:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 870:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 871:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 872:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL << DWT_CTRL_CYCCNTENA_Pos)           /*!< DWT CTR
 873:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 874:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* DWT CPI Count Register Definitions */
 875:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 876:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL << DWT_CPICNT_CPICNT_Pos)           /*!< DWT CPI
 877:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 878:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 879:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 880:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL << DWT_EXCCNT_EXCCNT_Pos)           /*!< DWT EXC
 881:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 882:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* DWT Sleep Count Register Definitions */
 883:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 884:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL << DWT_SLEEPCNT_SLEEPCNT_Pos)       /*!< DWT SLE
 885:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 886:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* DWT LSU Count Register Definitions */
 887:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 888:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL << DWT_LSUCNT_LSUCNT_Pos)           /*!< DWT LSU
 889:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 890:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 891:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 892:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL << DWT_FOLDCNT_FOLDCNT_Pos)         /*!< DWT FOL
 893:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 894:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 895:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
 896:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL << DWT_MASK_MASK_Pos)               /*!< DWT MAS
 897:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 898:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* DWT Comparator Function Register Definitions */
 899:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 900:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 901:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 902:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
 903:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 904:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 905:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 906:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 907:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 908:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 909:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 910:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 911:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 912:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 913:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 914:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 915:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 916:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 917:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 918:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 919:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 920:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 921:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 922:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 923:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 924:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL << DWT_FUNCTION_FUNCTION_Pos)        /*!< DWT FUN
 925:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 926:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
 927:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 928:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 929:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \ingroup  CMSIS_core_register
 930:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 931:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 932:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   @{
 933:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
 934:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 935:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 936:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
 937:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** typedef struct
 938:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
 939:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 940:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 941:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED0[2];
 942:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 943:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED1[55];
 944:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 945:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED2[131];
 946:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 947:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 948:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 949:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED3[759];
 950:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 951:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
 952:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
 953:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED4[1];
 954:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
 955:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
 956:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
 957:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED5[39];
 958:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
 959:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
 960:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED7[8];
 961:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
 962:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
 963:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** } TPI_Type;
 964:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 965:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
 966:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
 967:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL << TPI_ACPR_PRESCALER_Pos)        /*!< TPI ACP
 968:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 969:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
 970:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
 971:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL << TPI_SPPR_TXMODE_Pos)              /*!< TPI SPP
 972:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 973:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
 974:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
 975:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
 976:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 977:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
 978:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
 979:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 980:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
 981:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
 982:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 983:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
 984:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL << TPI_FFSR_FlInProg_Pos)            /*!< TPI FFS
 985:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 986:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
 987:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
 988:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
 989:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 990:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
 991:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
 992:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 993:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* TPI TRIGGER Register Definitions */
 994:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
 995:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL << TPI_TRIGGER_TRIGGER_Pos)          /*!< TPI TRI
 996:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
 997:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
 998:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
 999:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1000:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1001:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1002:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1003:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1004:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1005:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1006:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1007:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1008:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1009:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1010:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
1011:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1012:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1013:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
1014:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1015:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1016:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
1017:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL << TPI_FIFO0_ETM0_Pos)              /*!< TPI FIF
1018:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1019:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1020:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
1021:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL << TPI_ITATBCTR2_ATREADY_Pos)        /*!< TPI ITA
1022:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1023:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1024:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1025:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1026:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1027:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1028:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1029:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1030:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1031:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1032:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1033:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1034:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1035:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1036:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
1037:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1038:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1039:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
1040:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1041:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1042:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
1043:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL << TPI_FIFO1_ITM0_Pos)              /*!< TPI FIF
1044:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1045:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1046:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
1047:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL << TPI_ITATBCTR0_ATREADY_Pos)        /*!< TPI ITA
1048:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1049:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1050:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
1051:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL << TPI_ITCTRL_Mode_Pos)              /*!< TPI ITC
1052:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1053:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* TPI DEVID Register Definitions */
1054:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
1055:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1056:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1057:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
1058:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1059:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1060:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
1061:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1062:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1063:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
1064:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1065:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1066:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
1067:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1068:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1069:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
1070:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL << TPI_DEVID_NrTraceInput_Pos)      /*!< TPI DEV
1071:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1072:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1073:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
1074:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL << TPI_DEVTYPE_SubType_Pos)          /*!< TPI DEV
1075:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1076:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
1077:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1078:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1079:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1080:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1081:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1082:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #if (__MPU_PRESENT == 1)
1083:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \ingroup  CMSIS_core_register
1084:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1085:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1086:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   @{
1087:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
1088:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1089:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1090:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
1091:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** typedef struct
1092:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
1093:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
1094:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
1095:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
1096:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1097:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1098:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1099:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1100:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1101:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1102:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1103:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1104:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** } MPU_Type;
1105:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1106:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* MPU Type Register */
1107:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1108:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1109:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1110:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
1111:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1112:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1113:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1114:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
1115:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1116:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* MPU Control Register */
1117:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1118:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1119:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1120:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1121:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1122:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1123:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
1124:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
1125:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1126:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* MPU Region Number Register */
1127:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1128:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL << MPU_RNR_REGION_Pos)                 /*!< MPU 
1129:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1130:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* MPU Region Base Address Register */
1131:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1132:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1133:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1134:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1135:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1136:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1137:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1138:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL << MPU_RBAR_REGION_Pos)                 /*!< MPU 
1139:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1140:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* MPU Region Attribute and Size Register */
1141:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
1142:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1143:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1144:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
1145:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1146:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1147:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
1148:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1149:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1150:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
1151:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1152:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1153:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
1154:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1155:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1156:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
1157:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1158:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1159:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
1160:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1161:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1162:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1163:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1164:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1165:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
1166:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1167:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1168:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1169:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL << MPU_RASR_ENABLE_Pos)                   /*!< MPU 
1170:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1171:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /*@} end of group CMSIS_MPU */
1172:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #endif
1173:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1174:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1175:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #if (__FPU_PRESENT == 1)
1176:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \ingroup  CMSIS_core_register
1177:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1178:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1179:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   @{
1180:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
1181:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1182:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1183:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
1184:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** typedef struct
1185:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
1186:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****        uint32_t RESERVED0[1];
1187:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1188:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1189:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1190:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1191:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1192:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** } FPU_Type;
1193:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1194:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* Floating-Point Context Control Register */
1195:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
1196:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1197:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1198:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
1199:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1200:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1201:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
1202:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1203:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1204:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
1205:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1206:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1207:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
1208:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1209:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1210:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
1211:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1212:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1213:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
1214:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1215:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1216:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
1217:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1218:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1219:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
1220:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL << FPU_FPCCR_LSPACT_Pos)                  /*!< FPCC
1221:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1222:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* Floating-Point Context Address Register */
1223:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
1224:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1225:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1226:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* Floating-Point Default Status Control Register */
1227:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
1228:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1229:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1230:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
1231:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1232:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1233:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
1234:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1235:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1236:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
1237:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1238:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1239:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* Media and FP Feature Register 0 */
1240:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
1241:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1242:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1243:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
1244:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1245:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1246:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
1247:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1248:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1249:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
1250:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1251:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1252:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
1253:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1254:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1255:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
1256:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1257:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1258:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
1259:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1260:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1261:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
1262:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL << FPU_MVFR0_A_SIMD_registers_Pos)      /*!< MVFR
1263:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1264:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* Media and FP Feature Register 1 */
1265:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
1266:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1267:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1268:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
1269:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1270:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1271:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
1272:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1273:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1274:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
1275:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL << FPU_MVFR1_FtZ_mode_Pos)              /*!< MVFR
1276:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1277:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /*@} end of group CMSIS_FPU */
1278:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #endif
1279:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1280:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1281:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \ingroup  CMSIS_core_register
1282:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1283:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1284:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   @{
1285:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
1286:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1287:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1288:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
1289:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** typedef struct
1290:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
1291:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1292:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1293:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1294:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1295:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** } CoreDebug_Type;
1296:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1297:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* Debug Halting Control and Status Register */
1298:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1299:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1300:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1301:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
1302:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1303:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1304:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1305:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1306:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1307:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1308:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1309:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1310:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1311:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1312:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1313:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1314:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1315:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1316:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1317:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1318:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1319:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1320:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1321:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1322:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1323:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1324:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1325:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1326:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1327:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1328:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1329:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1330:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1331:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1332:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
1333:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1334:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* Debug Core Register Selector Register */
1335:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1336:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1337:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1338:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
1339:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
1340:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1341:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* Debug Exception and Monitor Control Register */
1342:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1343:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1344:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1345:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1346:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1347:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1348:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1349:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1350:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1351:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
1352:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1353:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1354:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1355:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1356:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1357:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1358:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1359:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1360:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
1361:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1362:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1363:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1364:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1365:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1366:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1367:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1368:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1369:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
1370:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1371:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1372:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
1373:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1374:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1375:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1376:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1377:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1378:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1379:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
1380:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1381:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1382:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1383:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1384:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \ingroup    CMSIS_core_register
1385:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1386:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1387:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   @{
1388:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
1389:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1390:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1391:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1392:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1393:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1394:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1395:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1396:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1397:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1398:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1399:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1400:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1401:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1402:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1403:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1404:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1405:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1406:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1407:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1408:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1409:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #if (__MPU_PRESENT == 1)
1410:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
1411:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
1412:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #endif
1413:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1414:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #if (__FPU_PRESENT == 1)
1415:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1416:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1417:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** #endif
1418:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1419:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /*@} */
1420:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1421:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1422:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1423:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /*******************************************************************************
1424:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  *                Hardware Abstraction Layer
1425:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   Core Function Interface contains:
1426:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   - Core NVIC Functions
1427:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   - Core SysTick Functions
1428:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   - Core Debug Functions
1429:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   - Core Register Access Functions
1430:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  ******************************************************************************/
1431:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1432:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** */
1433:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1434:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1435:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1436:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1437:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1438:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1439:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1440:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     @{
1441:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
1442:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1443:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Set Priority Grouping
1444:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1445:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1446:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1447:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   Only values from 0..7 are used.
1448:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   In case of a conflict between priority grouping and available
1449:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1450:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1451:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
1452:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
1453:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1454:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
1455:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   uint32_t reg_value;
1456:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 a
1457:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1458:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1459:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1460:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   reg_value  =  (reg_value                                 |
1461:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****                 ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1462:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1463:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   SCB->AIRCR =  reg_value;
1464:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** }
1465:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1466:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1467:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Get Priority Grouping
1468:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1469:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1470:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1471:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1472:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
1473:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1474:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
1475:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1476:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** }
1477:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1478:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1479:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Enable External Interrupt
1480:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1481:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1482:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1483:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1484:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
1485:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1486:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
  28              		.loc 1 1486 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 0346     		mov	r3, r0
  41 0008 FB71     		strb	r3, [r7, #7]
1487:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
1488:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32
  42              		.loc 1 1488 0
  43 000a 084B     		ldr	r3, .L2
  44 000c 97F90720 		ldrsb	r2, [r7, #7]
  45 0010 5209     		lsrs	r2, r2, #5
  46 0012 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
  47 0014 01F01F01 		and	r1, r1, #31
  48 0018 0120     		movs	r0, #1
  49 001a 00FA01F1 		lsl	r1, r0, r1
  50 001e 43F82210 		str	r1, [r3, r2, lsl #2]
1489:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** }
  51              		.loc 1 1489 0
  52 0022 0C37     		adds	r7, r7, #12
  53 0024 BD46     		mov	sp, r7
  54              		@ sp needed
  55 0026 5DF8047B 		ldr	r7, [sp], #4
  56 002a 7047     		bx	lr
  57              	.L3:
  58              		.align	2
  59              	.L2:
  60 002c 00E100E0 		.word	-536813312
  61              		.cfi_endproc
  62              	.LFE101:
  64              		.section	.text.NVIC_DisableIRQ,"ax",%progbits
  65              		.align	2
  66              		.thumb
  67              		.thumb_func
  69              	NVIC_DisableIRQ:
  70              	.LFB102:
1490:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1491:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1492:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Disable External Interrupt
1493:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1494:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1495:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1496:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1497:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
1498:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1499:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
  71              		.loc 1 1499 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 8
  74              		@ frame_needed = 1, uses_anonymous_args = 0
  75              		@ link register save eliminated.
  76 0000 80B4     		push	{r7}
  77              		.cfi_def_cfa_offset 4
  78              		.cfi_offset 7, -4
  79 0002 83B0     		sub	sp, sp, #12
  80              		.cfi_def_cfa_offset 16
  81 0004 00AF     		add	r7, sp, #0
  82              		.cfi_def_cfa_register 7
  83 0006 0346     		mov	r3, r0
  84 0008 FB71     		strb	r3, [r7, #7]
1500:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  85              		.loc 1 1500 0
  86 000a 094B     		ldr	r3, .L5
  87 000c 97F90720 		ldrsb	r2, [r7, #7]
  88 0010 5209     		lsrs	r2, r2, #5
  89 0012 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
  90 0014 01F01F01 		and	r1, r1, #31
  91 0018 0120     		movs	r0, #1
  92 001a 00FA01F1 		lsl	r1, r0, r1
  93 001e 2032     		adds	r2, r2, #32
  94 0020 43F82210 		str	r1, [r3, r2, lsl #2]
1501:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** }
  95              		.loc 1 1501 0
  96 0024 0C37     		adds	r7, r7, #12
  97 0026 BD46     		mov	sp, r7
  98              		@ sp needed
  99 0028 5DF8047B 		ldr	r7, [sp], #4
 100 002c 7047     		bx	lr
 101              	.L6:
 102 002e 00BF     		.align	2
 103              	.L5:
 104 0030 00E100E0 		.word	-536813312
 105              		.cfi_endproc
 106              	.LFE102:
 108              		.section	.text.NVIC_ClearPendingIRQ,"ax",%progbits
 109              		.align	2
 110              		.thumb
 111              		.thumb_func
 113              	NVIC_ClearPendingIRQ:
 114              	.LFB105:
1502:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1503:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1504:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Get Pending Interrupt
1505:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1506:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     The function reads the pending register in the NVIC and returns the pending bit
1507:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     for the specified interrupt.
1508:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1509:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1510:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1511:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \return             0  Interrupt status is not pending.
1512:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \return             1  Interrupt status is pending.
1513:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
1514:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1515:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
1516:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1517:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** }
1518:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1519:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1520:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Set Pending Interrupt
1521:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1522:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     The function sets the pending bit of an external interrupt.
1523:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1524:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
1525:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
1526:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1527:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
1528:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1529:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** }
1530:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1531:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1532:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** /** \brief  Clear Pending Interrupt
1533:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1534:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     The function clears the pending bit of an external interrupt.
1535:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** 
1536:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1537:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****  */
1538:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1539:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** {
 115              		.loc 1 1539 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 8
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 120 0000 80B4     		push	{r7}
 121              		.cfi_def_cfa_offset 4
 122              		.cfi_offset 7, -4
 123 0002 83B0     		sub	sp, sp, #12
 124              		.cfi_def_cfa_offset 16
 125 0004 00AF     		add	r7, sp, #0
 126              		.cfi_def_cfa_register 7
 127 0006 0346     		mov	r3, r0
 128 0008 FB71     		strb	r3, [r7, #7]
1540:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
 129              		.loc 1 1540 0
 130 000a 094B     		ldr	r3, .L8
 131 000c 97F90720 		ldrsb	r2, [r7, #7]
 132 0010 5209     		lsrs	r2, r2, #5
 133 0012 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 134 0014 01F01F01 		and	r1, r1, #31
 135 0018 0120     		movs	r0, #1
 136 001a 00FA01F1 		lsl	r1, r0, r1
 137 001e 6032     		adds	r2, r2, #96
 138 0020 43F82210 		str	r1, [r3, r2, lsl #2]
1541:R:\EE344\Labs\Lab3Repo\Lab3\CMSIS\core_cm4.h **** }
 139              		.loc 1 1541 0
 140 0024 0C37     		adds	r7, r7, #12
 141 0026 BD46     		mov	sp, r7
 142              		@ sp needed
 143 0028 5DF8047B 		ldr	r7, [sp], #4
 144 002c 7047     		bx	lr
 145              	.L9:
 146 002e 00BF     		.align	2
 147              	.L8:
 148 0030 00E100E0 		.word	-536813312
 149              		.cfi_endproc
 150              	.LFE105:
 152              		.global	CharError
 153              		.section	.rodata.CharError,"a",%progbits
 154              		.align	2
 157              	CharError:
 158 0000 0A455252 		.ascii	"\012ERROR: Invalid input. Please enter an input as "
 158      4F523A20 
 158      496E7661 
 158      6C696420 
 158      696E7075 
 159 0030 64657363 		.ascii	"described below:\015\012\000"
 159      72696265 
 159      64206265 
 159      6C6F773A 
 159      0D0A00
 160              		.global	MenuPrompt
 161 0043 00       		.section	.rodata.MenuPrompt,"a",%progbits
 162              		.align	2
 165              	MenuPrompt:
 166 0000 0A506C65 		.ascii	"\012Please enter an input as described below:\015\012"
 166      61736520 
 166      656E7465 
 166      7220616E 
 166      20696E70 
 167 002c 00       		.ascii	"\000"
 168              		.global	CharOption1
 169 002d 000000   		.section	.rodata.CharOption1,"a",%progbits
 170              		.align	2
 173              	CharOption1:
 174 0000 27732720 		.ascii	"'s' - Demonstrate the software only counter.\015\012"
 174      2D204465 
 174      6D6F6E73 
 174      74726174 
 174      65207468 
 175 002e 00       		.ascii	"\000"
 176              		.global	CharOption2
 177 002f 00       		.section	.rodata.CharOption2,"a",%progbits
 178              		.align	2
 181              	CharOption2:
 182 0000 27622720 		.ascii	"'b' - Demonstrate hardware and software combination"
 182      2D204465 
 182      6D6F6E73 
 182      74726174 
 182      65206861 
 183 0033 20636F75 		.ascii	" counter.\015\012\000"
 183      6E746572 
 183      2E0D0A00 
 184              		.global	CharOption3
 185 003f 00       		.section	.rodata.CharOption3,"a",%progbits
 186              		.align	2
 189              	CharOption3:
 190 0000 27682720 		.ascii	"'h' - Demonstrate the interrupt hardware only.\015\012"
 190      2D204465 
 190      6D6F6E73 
 190      74726174 
 190      65207468 
 191 0030 00       		.ascii	"\000"
 192              		.global	SoftwarePrompt
 193 0031 000000   		.section	.rodata.SoftwarePrompt,"a",%progbits
 194              		.align	2
 197              	SoftwarePrompt:
 198 0000 0A536F66 		.ascii	"\012Software counter started. Press 'q' to return t"
 198      74776172 
 198      6520636F 
 198      756E7465 
 198      72207374 
 199 0030 6F207468 		.ascii	"o the menu.\015\012\000"
 199      65206D65 
 199      6E752E0D 
 199      0A00
 200              		.global	SoftwareHardwarePrompt
 201 003e 0000     		.section	.rodata.SoftwareHardwarePrompt,"a",%progbits
 202              		.align	2
 205              	SoftwareHardwarePrompt:
 206 0000 0A536F66 		.ascii	"\012Software/Hardware counter started. Press 'q' to"
 206      74776172 
 206      652F4861 
 206      72647761 
 206      72652063 
 207 0030 20726574 		.ascii	" return to the menu.\015\012\000"
 207      75726E20 
 207      746F2074 
 207      6865206D 
 207      656E752E 
 208              		.global	HardwarePrompt
 209 0047 00       		.section	.rodata.HardwarePrompt,"a",%progbits
 210              		.align	2
 213              	HardwarePrompt:
 214 0000 0A486172 		.ascii	"\012Hardware counter started. Press 'q' to return t"
 214      64776172 
 214      6520636F 
 214      756E7465 
 214      72207374 
 215 0030 6F207468 		.ascii	"o the menu.\015\012\000"
 215      65206D65 
 215      6E752E0D 
 215      0A00
 216              		.global	hardware_count
 217 003e 0000     		.section	.bss.hardware_count,"aw",%nobits
 218              		.align	1
 221              	hardware_count:
 222 0000 0000     		.space	2
 223              		.section	.rodata
 224              		.align	2
 225              	.LC0:
 226 0000 0D0A4353 		.ascii	"\015\012CS: \000"
 226      3A2000
 227 0007 00       		.align	2
 228              	.LC1:
 229 0008 202D2000 		.ascii	" - \000"
 230              		.align	2
 231              	.LC2:
 232 000c 2000     		.ascii	" \000"
 233 000e 0000     		.align	2
 234              	.LC3:
 235 0010 0D0A00   		.ascii	"\015\012\000"
 236              		.section	.text.main,"ax",%progbits
 237              		.align	2
 238              		.global	main
 239              		.thumb
 240              		.thumb_func
 242              	main:
 243              	.LFB116:
 244              		.file 2 "../Sources/Lab3.c"
   1:../Sources/Lab3.c **** /******************************************************************************
   2:../Sources/Lab3.c **** * EE344 Lab 3 - Realtime IO Demonstration
   3:../Sources/Lab3.c **** *   Detects and services an event on PORTA bit4 (SW2 press) using:
   4:../Sources/Lab3.c **** *   1) Software only
   5:../Sources/Lab3.c **** *   2) Hardware and software
   6:../Sources/Lab3.c **** *   3) Interrupt hardware only
   7:../Sources/Lab3.c **** *
   8:../Sources/Lab3.c **** * Anthony Needles, 10/29/2017
   9:../Sources/Lab3.c **** ******************************************************************************/
  10:../Sources/Lab3.c **** 
  11:../Sources/Lab3.c **** #include "MCUType.h"
  12:../Sources/Lab3.c **** #include "BasicIO.h"
  13:../Sources/Lab3.c **** #include "K65TWR_GPIO.h"
  14:../Sources/Lab3.c **** 
  15:../Sources/Lab3.c **** #define IRQC_NONE 0
  16:../Sources/Lab3.c **** #define IRQC_REDGE 9
  17:../Sources/Lab3.c **** 
  18:../Sources/Lab3.c **** INT16U CalcChkSum(INT8U *startaddr, INT8U *endaddr);
  19:../Sources/Lab3.c **** void SoftwareCounter(void);
  20:../Sources/Lab3.c **** void SoftwareHardwareCounter(void);
  21:../Sources/Lab3.c **** void HardwareCounter(void);
  22:../Sources/Lab3.c **** void PORTA_IRQHandler(void);
  23:../Sources/Lab3.c **** 
  24:../Sources/Lab3.c **** const INT8C CharError[] = "\nERROR: Invalid input. Please enter an input as described below:\r\n";
  25:../Sources/Lab3.c **** const INT8C MenuPrompt[] = "\nPlease enter an input as described below:\r\n";
  26:../Sources/Lab3.c **** const INT8C CharOption1[] = "'s' - Demonstrate the software only counter.\r\n";
  27:../Sources/Lab3.c **** const INT8C CharOption2[] = "'b' - Demonstrate hardware and software combination counter.\r\n";
  28:../Sources/Lab3.c **** const INT8C CharOption3[] = "'h' - Demonstrate the interrupt hardware only.\r\n";
  29:../Sources/Lab3.c **** const INT8C SoftwarePrompt[] = "\nSoftware counter started. Press 'q' to return to the menu.\r\n";
  30:../Sources/Lab3.c **** const INT8C SoftwareHardwarePrompt[] = "\nSoftware/Hardware counter started. Press 'q' to return to
  31:../Sources/Lab3.c **** const INT8C HardwarePrompt[] = "\nHardware counter started. Press 'q' to return to the menu.\r\n";
  32:../Sources/Lab3.c **** 
  33:../Sources/Lab3.c **** volatile INT16U hardware_count = 0; // Volatile data to be changed asynchronously
  34:../Sources/Lab3.c **** 
  35:../Sources/Lab3.c **** void main(void){
 245              		.loc 2 35 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 24
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 80B5     		push	{r7, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 86B0     		sub	sp, sp, #24
 254              		.cfi_def_cfa_offset 32
 255 0004 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
  36:../Sources/Lab3.c **** 
  37:../Sources/Lab3.c ****     INT8U *start_addr;
  38:../Sources/Lab3.c ****     INT8U *end_addr;
  39:../Sources/Lab3.c ****     INT32U lower_addr = 0x00000000u;
 257              		.loc 2 39 0
 258 0006 0023     		movs	r3, #0
 259 0008 3B61     		str	r3, [r7, #16]
  40:../Sources/Lab3.c ****     INT32U upper_addr = 0x001FFFFFu;
 260              		.loc 2 40 0
 261 000a 344B     		ldr	r3, .L21
 262 000c FB60     		str	r3, [r7, #12]
  41:../Sources/Lab3.c ****     INT16U check_sum;
  42:../Sources/Lab3.c ****     INT8C user_char;
  43:../Sources/Lab3.c ****     INT8U valid_input;
  44:../Sources/Lab3.c **** 
  45:../Sources/Lab3.c ****     BIOOpen();
 263              		.loc 2 45 0
 264 000e FFF7FEFF 		bl	BIOOpen
  46:../Sources/Lab3.c ****     start_addr = (void*)lower_addr;
 265              		.loc 2 46 0
 266 0012 3B69     		ldr	r3, [r7, #16]
 267 0014 BB60     		str	r3, [r7, #8]
  47:../Sources/Lab3.c ****     end_addr = (void*)upper_addr;
 268              		.loc 2 47 0
 269 0016 FB68     		ldr	r3, [r7, #12]
 270 0018 7B60     		str	r3, [r7, #4]
  48:../Sources/Lab3.c ****     check_sum = CalcChkSum(start_addr, end_addr);
 271              		.loc 2 48 0
 272 001a B868     		ldr	r0, [r7, #8]
 273 001c 7968     		ldr	r1, [r7, #4]
 274 001e FFF7FEFF 		bl	CalcChkSum
 275 0022 0346     		mov	r3, r0
 276 0024 7B80     		strh	r3, [r7, #2]	@ movhi
  49:../Sources/Lab3.c ****     BIOPutStrg("\r\nCS: ");
 277              		.loc 2 49 0
 278 0026 2E48     		ldr	r0, .L21+4
 279 0028 FFF7FEFF 		bl	BIOPutStrg
  50:../Sources/Lab3.c ****     BIOOutHexWord(lower_addr);
 280              		.loc 2 50 0
 281 002c 3869     		ldr	r0, [r7, #16]
 282 002e FFF7FEFF 		bl	BIOOutHexWord
  51:../Sources/Lab3.c ****     BIOPutStrg(" - ");
 283              		.loc 2 51 0
 284 0032 2C48     		ldr	r0, .L21+8
 285 0034 FFF7FEFF 		bl	BIOPutStrg
  52:../Sources/Lab3.c ****     BIOOutHexWord(upper_addr);
 286              		.loc 2 52 0
 287 0038 F868     		ldr	r0, [r7, #12]
 288 003a FFF7FEFF 		bl	BIOOutHexWord
  53:../Sources/Lab3.c ****     BIOPutStrg(" ");
 289              		.loc 2 53 0
 290 003e 2A48     		ldr	r0, .L21+12
 291 0040 FFF7FEFF 		bl	BIOPutStrg
  54:../Sources/Lab3.c ****     BIOOutHexHWord(check_sum);
 292              		.loc 2 54 0
 293 0044 7B88     		ldrh	r3, [r7, #2]
 294 0046 1846     		mov	r0, r3
 295 0048 FFF7FEFF 		bl	BIOOutHexHWord
  55:../Sources/Lab3.c ****     BIOPutStrg("\r\n");
 296              		.loc 2 55 0
 297 004c 2748     		ldr	r0, .L21+16
 298 004e FFF7FEFF 		bl	BIOPutStrg
 299              	.L20:
  56:../Sources/Lab3.c **** 
  57:../Sources/Lab3.c ****     while(1){
  58:../Sources/Lab3.c ****         BIOPutStrg(MenuPrompt);
 300              		.loc 2 58 0
 301 0052 2748     		ldr	r0, .L21+20
 302 0054 FFF7FEFF 		bl	BIOPutStrg
  59:../Sources/Lab3.c ****         BIOPutStrg(CharOption1);
 303              		.loc 2 59 0
 304 0058 2648     		ldr	r0, .L21+24
 305 005a FFF7FEFF 		bl	BIOPutStrg
  60:../Sources/Lab3.c ****         BIOPutStrg(CharOption2);
 306              		.loc 2 60 0
 307 005e 2648     		ldr	r0, .L21+28
 308 0060 FFF7FEFF 		bl	BIOPutStrg
  61:../Sources/Lab3.c ****         BIOPutStrg(CharOption3);
 309              		.loc 2 61 0
 310 0064 2548     		ldr	r0, .L21+32
 311 0066 FFF7FEFF 		bl	BIOPutStrg
  62:../Sources/Lab3.c **** 
  63:../Sources/Lab3.c ****         valid_input = 0;
 312              		.loc 2 63 0
 313 006a 0023     		movs	r3, #0
 314 006c BB75     		strb	r3, [r7, #22]
  64:../Sources/Lab3.c ****         while(!valid_input){
 315              		.loc 2 64 0
 316 006e 1EE0     		b	.L11
 317              	.L14:
  65:../Sources/Lab3.c ****             user_char = BIOGetChar();
 318              		.loc 2 65 0
 319 0070 FFF7FEFF 		bl	BIOGetChar
 320 0074 0346     		mov	r3, r0
 321 0076 FB75     		strb	r3, [r7, #23]
  66:../Sources/Lab3.c ****             if((user_char == 's') || (user_char == 'b') || (user_char == 'h')){
 322              		.loc 2 66 0
 323 0078 97F91730 		ldrsb	r3, [r7, #23]
 324 007c 732B     		cmp	r3, #115
 325 007e 07D0     		beq	.L12
 326              		.loc 2 66 0 is_stmt 0 discriminator 1
 327 0080 97F91730 		ldrsb	r3, [r7, #23]
 328 0084 622B     		cmp	r3, #98
 329 0086 03D0     		beq	.L12
 330 0088 97F91730 		ldrsb	r3, [r7, #23]
 331 008c 682B     		cmp	r3, #104
 332 008e 02D1     		bne	.L13
 333              	.L12:
  67:../Sources/Lab3.c ****                 valid_input = 1;
 334              		.loc 2 67 0 is_stmt 1
 335 0090 0123     		movs	r3, #1
 336 0092 BB75     		strb	r3, [r7, #22]
 337 0094 0BE0     		b	.L11
 338              	.L13:
  68:../Sources/Lab3.c ****             } else {
  69:../Sources/Lab3.c ****                 BIOPutStrg(CharError);
 339              		.loc 2 69 0
 340 0096 1A48     		ldr	r0, .L21+36
 341 0098 FFF7FEFF 		bl	BIOPutStrg
  70:../Sources/Lab3.c ****                 BIOPutStrg(CharOption1);
 342              		.loc 2 70 0
 343 009c 1548     		ldr	r0, .L21+24
 344 009e FFF7FEFF 		bl	BIOPutStrg
  71:../Sources/Lab3.c ****                 BIOPutStrg(CharOption2);
 345              		.loc 2 71 0
 346 00a2 1548     		ldr	r0, .L21+28
 347 00a4 FFF7FEFF 		bl	BIOPutStrg
  72:../Sources/Lab3.c ****                 BIOPutStrg(CharOption3);
 348              		.loc 2 72 0
 349 00a8 1448     		ldr	r0, .L21+32
 350 00aa FFF7FEFF 		bl	BIOPutStrg
 351              	.L11:
  64:../Sources/Lab3.c ****         while(!valid_input){
 352              		.loc 2 64 0 discriminator 1
 353 00ae BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 354 00b0 002B     		cmp	r3, #0
 355 00b2 DDD0     		beq	.L14
  73:../Sources/Lab3.c ****             }
  74:../Sources/Lab3.c ****         }
  75:../Sources/Lab3.c **** 
  76:../Sources/Lab3.c ****         switch(user_char){
 356              		.loc 2 76 0
 357 00b4 97F91730 		ldrsb	r3, [r7, #23]
 358 00b8 682B     		cmp	r3, #104
 359 00ba 0AD0     		beq	.L16
 360 00bc 732B     		cmp	r3, #115
 361 00be 02D0     		beq	.L17
 362 00c0 622B     		cmp	r3, #98
 363 00c2 03D0     		beq	.L18
  77:../Sources/Lab3.c ****             case('s'):
  78:../Sources/Lab3.c ****                 SoftwareCounter();
  79:../Sources/Lab3.c ****                 break;
  80:../Sources/Lab3.c ****             case('b'):
  81:../Sources/Lab3.c ****                 SoftwareHardwareCounter();
  82:../Sources/Lab3.c ****                 break;
  83:../Sources/Lab3.c ****             case('h'):
  84:../Sources/Lab3.c ****                 HardwareCounter();
  85:../Sources/Lab3.c ****                 break;
  86:../Sources/Lab3.c ****             default:
  87:../Sources/Lab3.c ****                 break;
 364              		.loc 2 87 0
 365 00c4 08E0     		b	.L19
 366              	.L17:
  78:../Sources/Lab3.c ****                 SoftwareCounter();
 367              		.loc 2 78 0
 368 00c6 FFF7FEFF 		bl	SoftwareCounter
  79:../Sources/Lab3.c ****                 break;
 369              		.loc 2 79 0
 370 00ca 05E0     		b	.L19
 371              	.L18:
  81:../Sources/Lab3.c ****                 SoftwareHardwareCounter();
 372              		.loc 2 81 0
 373 00cc FFF7FEFF 		bl	SoftwareHardwareCounter
  82:../Sources/Lab3.c ****                 break;
 374              		.loc 2 82 0
 375 00d0 02E0     		b	.L19
 376              	.L16:
  84:../Sources/Lab3.c ****                 HardwareCounter();
 377              		.loc 2 84 0
 378 00d2 FFF7FEFF 		bl	HardwareCounter
  85:../Sources/Lab3.c ****                 break;
 379              		.loc 2 85 0
 380 00d6 00BF     		nop
 381              	.L19:
  88:../Sources/Lab3.c ****         }
  89:../Sources/Lab3.c ****     }
 382              		.loc 2 89 0
 383 00d8 BBE7     		b	.L20
 384              	.L22:
 385 00da 00BF     		.align	2
 386              	.L21:
 387 00dc FFFF1F00 		.word	2097151
 388 00e0 00000000 		.word	.LC0
 389 00e4 08000000 		.word	.LC1
 390 00e8 0C000000 		.word	.LC2
 391 00ec 10000000 		.word	.LC3
 392 00f0 00000000 		.word	MenuPrompt
 393 00f4 00000000 		.word	CharOption1
 394 00f8 00000000 		.word	CharOption2
 395 00fc 00000000 		.word	CharOption3
 396 0100 00000000 		.word	CharError
 397              		.cfi_endproc
 398              	.LFE116:
 400              		.section	.text.CalcChkSum,"ax",%progbits
 401              		.align	2
 402              		.global	CalcChkSum
 403              		.thumb
 404              		.thumb_func
 406              	CalcChkSum:
 407              	.LFB117:
  90:../Sources/Lab3.c **** }
  91:../Sources/Lab3.c **** /********************************************************************
  92:../Sources/Lab3.c **** * CalcChkSum - Performs checksum between to give addresses.
  93:../Sources/Lab3.c **** *
  94:../Sources/Lab3.c **** * Description:  A routine that will take two addresses and sums the 1 byte
  95:../Sources/Lab3.c **** *               contents in each address and stores into "check_sum."
  96:../Sources/Lab3.c **** *               A check for rollover after final address prevents terminal
  97:../Sources/Lab3.c **** *               bug  where the lower address is never actually equal to the
  98:../Sources/Lab3.c **** *               upper address
  99:../Sources/Lab3.c **** *
 100:../Sources/Lab3.c **** * Return value: INT16U Checksum value
 101:../Sources/Lab3.c **** *
 102:../Sources/Lab3.c **** * Arguments:    *startaddr is a pointer to the desired lower address
 103:../Sources/Lab3.c **** *               *endaddr is a pointer to the desired higher address
 104:../Sources/Lab3.c **** ********************************************************************/
 105:../Sources/Lab3.c **** INT16U CalcChkSum(INT8U *startaddr, INT8U *endaddr){
 408              		.loc 2 105 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 24
 411              		@ frame_needed = 1, uses_anonymous_args = 0
 412              		@ link register save eliminated.
 413 0000 80B4     		push	{r7}
 414              		.cfi_def_cfa_offset 4
 415              		.cfi_offset 7, -4
 416 0002 87B0     		sub	sp, sp, #28
 417              		.cfi_def_cfa_offset 32
 418 0004 00AF     		add	r7, sp, #0
 419              		.cfi_def_cfa_register 7
 420 0006 7860     		str	r0, [r7, #4]
 421 0008 3960     		str	r1, [r7]
 106:../Sources/Lab3.c ****     INT8U *low_addr = startaddr;
 422              		.loc 2 106 0
 423 000a 7B68     		ldr	r3, [r7, #4]
 424 000c 7B61     		str	r3, [r7, #20]
 107:../Sources/Lab3.c ****     INT8U *high_addr = endaddr;
 425              		.loc 2 107 0
 426 000e 3B68     		ldr	r3, [r7]
 427 0010 FB60     		str	r3, [r7, #12]
 108:../Sources/Lab3.c ****     INT16U check_sum = 0;
 428              		.loc 2 108 0
 429 0012 0023     		movs	r3, #0
 430 0014 7B82     		strh	r3, [r7, #18]	@ movhi
 109:../Sources/Lab3.c ****     INT8U rollover_flag = 0;
 431              		.loc 2 109 0
 432 0016 0023     		movs	r3, #0
 433 0018 7B74     		strb	r3, [r7, #17]
 110:../Sources/Lab3.c ****     while((low_addr <= high_addr) && (!rollover_flag)){             // In order to combat terminal 
 434              		.loc 2 110 0
 435 001a 0FE0     		b	.L24
 436              	.L27:
 111:../Sources/Lab3.c ****         check_sum = check_sum + *low_addr;                          // upper address is 0xFFFFFFFF 
 437              		.loc 2 111 0
 438 001c 7B69     		ldr	r3, [r7, #20]
 439 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 440 0020 1A46     		mov	r2, r3
 441 0022 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 442 0024 1344     		add	r3, r3, r2
 443 0026 7B82     		strh	r3, [r7, #18]	@ movhi
 112:../Sources/Lab3.c ****                                                                     // check is used for rollover
 113:../Sources/Lab3.c ****         if(low_addr != 0xFFFFFFFFu){
 444              		.loc 2 113 0
 445 0028 7B69     		ldr	r3, [r7, #20]
 446 002a B3F1FF3F 		cmp	r3, #-1
 447 002e 03D0     		beq	.L25
 114:../Sources/Lab3.c ****             low_addr++;
 448              		.loc 2 114 0
 449 0030 7B69     		ldr	r3, [r7, #20]
 450 0032 0133     		adds	r3, r3, #1
 451 0034 7B61     		str	r3, [r7, #20]
 452 0036 01E0     		b	.L24
 453              	.L25:
 115:../Sources/Lab3.c ****         } else {
 116:../Sources/Lab3.c ****             rollover_flag = 1;
 454              		.loc 2 116 0
 455 0038 0123     		movs	r3, #1
 456 003a 7B74     		strb	r3, [r7, #17]
 457              	.L24:
 110:../Sources/Lab3.c ****     while((low_addr <= high_addr) && (!rollover_flag)){             // In order to combat terminal 
 458              		.loc 2 110 0 discriminator 1
 459 003c 7A69     		ldr	r2, [r7, #20]
 460 003e FB68     		ldr	r3, [r7, #12]
 461 0040 9A42     		cmp	r2, r3
 462 0042 02D8     		bhi	.L26
 110:../Sources/Lab3.c ****     while((low_addr <= high_addr) && (!rollover_flag)){             // In order to combat terminal 
 463              		.loc 2 110 0 is_stmt 0 discriminator 2
 464 0044 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 465 0046 002B     		cmp	r3, #0
 466 0048 E8D0     		beq	.L27
 467              	.L26:
 117:../Sources/Lab3.c ****         }
 118:../Sources/Lab3.c ****     }
 119:../Sources/Lab3.c ****     return check_sum;
 468              		.loc 2 119 0 is_stmt 1
 469 004a 7B8A     		ldrh	r3, [r7, #18]
 120:../Sources/Lab3.c **** }
 470              		.loc 2 120 0
 471 004c 1846     		mov	r0, r3
 472 004e 1C37     		adds	r7, r7, #28
 473 0050 BD46     		mov	sp, r7
 474              		@ sp needed
 475 0052 5DF8047B 		ldr	r7, [sp], #4
 476 0056 7047     		bx	lr
 477              		.cfi_endproc
 478              	.LFE117:
 480              		.section	.rodata
 481 0013 00       		.align	2
 482              	.LC4:
 483 0014 0D436F75 		.ascii	"\015Count: \000"
 483      6E743A20 
 483      00
 484 001d 000000   		.section	.text.SoftwareCounter,"ax",%progbits
 485              		.align	2
 486              		.global	SoftwareCounter
 487              		.thumb
 488              		.thumb_func
 490              	SoftwareCounter:
 491              	.LFB118:
 121:../Sources/Lab3.c **** /********************************************************************
 122:../Sources/Lab3.c **** * SoftwareCounter() - Counts SW2 presses
 123:../Sources/Lab3.c **** *
 124:../Sources/Lab3.c **** * Description:  A routine that watches for a posedge change on the
 125:../Sources/Lab3.c **** *               state of SW2, specified with the K65TWR GPIO support package
 126:../Sources/Lab3.c **** *               definition "SW2_INPUT", and counts the amount of edges.
 127:../Sources/Lab3.c **** *
 128:../Sources/Lab3.c **** * Return value: None
 129:../Sources/Lab3.c **** *
 130:../Sources/Lab3.c **** * Arguments:    None
 131:../Sources/Lab3.c **** ********************************************************************/
 132:../Sources/Lab3.c **** void SoftwareCounter(void){
 492              		.loc 2 132 0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 8
 495              		@ frame_needed = 1, uses_anonymous_args = 0
 496 0000 80B5     		push	{r7, lr}
 497              		.cfi_def_cfa_offset 8
 498              		.cfi_offset 7, -8
 499              		.cfi_offset 14, -4
 500 0002 82B0     		sub	sp, sp, #8
 501              		.cfi_def_cfa_offset 16
 502 0004 00AF     		add	r7, sp, #0
 503              		.cfi_def_cfa_register 7
 133:../Sources/Lab3.c ****     BIOPutStrg(SoftwarePrompt);
 504              		.loc 2 133 0
 505 0006 1848     		ldr	r0, .L35
 506 0008 FFF7FEFF 		bl	BIOPutStrg
 134:../Sources/Lab3.c ****     GpioSw2Init(IRQC_NONE); // Disables interrupts for this counter
 507              		.loc 2 134 0
 508 000c 0020     		movs	r0, #0
 509 000e FFF7FEFF 		bl	GpioSw2Init
 135:../Sources/Lab3.c ****     INT16U count = 0;
 510              		.loc 2 135 0
 511 0012 0023     		movs	r3, #0
 512 0014 FB80     		strh	r3, [r7, #6]	@ movhi
 136:../Sources/Lab3.c ****     INT8U last_sig = 1;
 513              		.loc 2 136 0
 514 0016 0123     		movs	r3, #1
 515 0018 7B71     		strb	r3, [r7, #5]
 516              	.L33:
 517              	.LBB2:
 137:../Sources/Lab3.c ****     while(1){                               // This loop catches positive edge changes on
 138:../Sources/Lab3.c ****         INT8U cur_sig = SW2_INPUT;          // the switch signal, else counter will increment
 518              		.loc 2 138 0
 519 001a 144B     		ldr	r3, .L35+4
 520 001c 1B69     		ldr	r3, [r3, #16]
 521 001e DBB2     		uxtb	r3, r3
 522 0020 03F01003 		and	r3, r3, #16
 523 0024 3B71     		strb	r3, [r7, #4]
 139:../Sources/Lab3.c ****         if((!cur_sig) &&  (last_sig)){      // several times per press
 524              		.loc 2 139 0
 525 0026 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 526 0028 002B     		cmp	r3, #0
 527 002a 0ED1     		bne	.L30
 528              		.loc 2 139 0 is_stmt 0 discriminator 1
 529 002c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 530 002e 002B     		cmp	r3, #0
 531 0030 0BD0     		beq	.L30
 140:../Sources/Lab3.c ****             count++;
 532              		.loc 2 140 0 is_stmt 1
 533 0032 FB88     		ldrh	r3, [r7, #6]
 534 0034 0133     		adds	r3, r3, #1
 535 0036 FB80     		strh	r3, [r7, #6]	@ movhi
 141:../Sources/Lab3.c ****             BIOPutStrg("\rCount: ");
 536              		.loc 2 141 0
 537 0038 0D48     		ldr	r0, .L35+8
 538 003a FFF7FEFF 		bl	BIOPutStrg
 142:../Sources/Lab3.c ****             BIOOutDecHWord(count,0);
 539              		.loc 2 142 0
 540 003e FB88     		ldrh	r3, [r7, #6]
 541 0040 1846     		mov	r0, r3
 542 0042 0021     		movs	r1, #0
 543 0044 FFF7FEFF 		bl	BIOOutDecHWord
 544 0048 08E0     		b	.L31
 545              	.L30:
 143:../Sources/Lab3.c ****         } else if(BIORead() == 'q'){
 546              		.loc 2 143 0
 547 004a FFF7FEFF 		bl	BIORead
 548 004e 0346     		mov	r3, r0
 549 0050 712B     		cmp	r3, #113
 550 0052 03D1     		bne	.L31
 144:../Sources/Lab3.c ****             BIOPutStrg("\r\n");
 551              		.loc 2 144 0
 552 0054 0748     		ldr	r0, .L35+12
 553 0056 FFF7FEFF 		bl	BIOPutStrg
 145:../Sources/Lab3.c ****             return;
 554              		.loc 2 145 0
 555 005a 02E0     		b	.L34
 556              	.L31:
 146:../Sources/Lab3.c ****         } else {
 147:../Sources/Lab3.c ****         }
 148:../Sources/Lab3.c ****         last_sig = cur_sig;
 557              		.loc 2 148 0
 558 005c 3B79     		ldrb	r3, [r7, #4]
 559 005e 7B71     		strb	r3, [r7, #5]
 560              	.LBE2:
 149:../Sources/Lab3.c ****     }
 561              		.loc 2 149 0
 562 0060 DBE7     		b	.L33
 563              	.L34:
 150:../Sources/Lab3.c **** }
 564              		.loc 2 150 0
 565 0062 0837     		adds	r7, r7, #8
 566 0064 BD46     		mov	sp, r7
 567              		@ sp needed
 568 0066 80BD     		pop	{r7, pc}
 569              	.L36:
 570              		.align	2
 571              	.L35:
 572 0068 00000000 		.word	SoftwarePrompt
 573 006c 00F00F40 		.word	1074786304
 574 0070 14000000 		.word	.LC4
 575 0074 10000000 		.word	.LC3
 576              		.cfi_endproc
 577              	.LFE118:
 579              		.section	.text.SoftwareHardwareCounter,"ax",%progbits
 580              		.align	2
 581              		.global	SoftwareHardwareCounter
 582              		.thumb
 583              		.thumb_func
 585              	SoftwareHardwareCounter:
 586              	.LFB119:
 151:../Sources/Lab3.c **** /********************************************************************
 152:../Sources/Lab3.c **** * SoftwareHardwareCounter() - Counts SW2 presses
 153:../Sources/Lab3.c **** *
 154:../Sources/Lab3.c **** * Description:  A routine that watches for the SW2 interrupt service
 155:../Sources/Lab3.c **** *               flag to be set, clears it, and counts up. Must enable interrupts
 156:../Sources/Lab3.c **** *               on PORTA, specifically uses rising edge interrupts.
 157:../Sources/Lab3.c **** *
 158:../Sources/Lab3.c **** * Return value: None
 159:../Sources/Lab3.c **** *
 160:../Sources/Lab3.c **** * Arguments:    None
 161:../Sources/Lab3.c **** ********************************************************************/
 162:../Sources/Lab3.c **** void SoftwareHardwareCounter(void){
 587              		.loc 2 162 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 8
 590              		@ frame_needed = 1, uses_anonymous_args = 0
 591 0000 80B5     		push	{r7, lr}
 592              		.cfi_def_cfa_offset 8
 593              		.cfi_offset 7, -8
 594              		.cfi_offset 14, -4
 595 0002 82B0     		sub	sp, sp, #8
 596              		.cfi_def_cfa_offset 16
 597 0004 00AF     		add	r7, sp, #0
 598              		.cfi_def_cfa_register 7
 163:../Sources/Lab3.c ****     BIOPutStrg(SoftwareHardwarePrompt);
 599              		.loc 2 163 0
 600 0006 1848     		ldr	r0, .L43
 601 0008 FFF7FEFF 		bl	BIOPutStrg
 164:../Sources/Lab3.c ****     GpioSw2Init(IRQC_REDGE);    // Enables rising edge interrupts
 602              		.loc 2 164 0
 603 000c 0920     		movs	r0, #9
 604 000e FFF7FEFF 		bl	GpioSw2Init
 165:../Sources/Lab3.c ****     INT16U count = 0;
 605              		.loc 2 165 0
 606 0012 0023     		movs	r3, #0
 607 0014 FB80     		strh	r3, [r7, #6]	@ movhi
 166:../Sources/Lab3.c ****     SW2_CLR_ISF();
 608              		.loc 2 166 0
 609 0016 154B     		ldr	r3, .L43+4
 610 0018 1022     		movs	r2, #16
 611 001a C3F8A020 		str	r2, [r3, #160]
 612              	.L41:
 167:../Sources/Lab3.c ****     while(1){                   // Counter will increment each time it sees the
 168:../Sources/Lab3.c ****         if(SW2_ISF){            // interrupt flag is set, and clears it to prevent
 613              		.loc 2 168 0
 614 001e 134B     		ldr	r3, .L43+4
 615 0020 D3F8A030 		ldr	r3, [r3, #160]
 616 0024 03F01003 		and	r3, r3, #16
 617 0028 002B     		cmp	r3, #0
 618 002a 0FD0     		beq	.L38
 169:../Sources/Lab3.c ****             SW2_CLR_ISF();      // non stop counts (due to flag remaining set)
 619              		.loc 2 169 0
 620 002c 0F4B     		ldr	r3, .L43+4
 621 002e 1022     		movs	r2, #16
 622 0030 C3F8A020 		str	r2, [r3, #160]
 170:../Sources/Lab3.c ****             count++;
 623              		.loc 2 170 0
 624 0034 FB88     		ldrh	r3, [r7, #6]
 625 0036 0133     		adds	r3, r3, #1
 626 0038 FB80     		strh	r3, [r7, #6]	@ movhi
 171:../Sources/Lab3.c ****             BIOPutStrg("\rCount: ");
 627              		.loc 2 171 0
 628 003a 0D48     		ldr	r0, .L43+8
 629 003c FFF7FEFF 		bl	BIOPutStrg
 172:../Sources/Lab3.c ****             BIOOutDecHWord(count,0);
 630              		.loc 2 172 0
 631 0040 FB88     		ldrh	r3, [r7, #6]
 632 0042 1846     		mov	r0, r3
 633 0044 0021     		movs	r1, #0
 634 0046 FFF7FEFF 		bl	BIOOutDecHWord
 635 004a 08E0     		b	.L39
 636              	.L38:
 173:../Sources/Lab3.c ****         } else if(BIORead() == 'q'){
 637              		.loc 2 173 0
 638 004c FFF7FEFF 		bl	BIORead
 639 0050 0346     		mov	r3, r0
 640 0052 712B     		cmp	r3, #113
 641 0054 03D1     		bne	.L39
 174:../Sources/Lab3.c ****             BIOPutStrg("\r\n");
 642              		.loc 2 174 0
 643 0056 0748     		ldr	r0, .L43+12
 644 0058 FFF7FEFF 		bl	BIOPutStrg
 175:../Sources/Lab3.c ****             return;
 645              		.loc 2 175 0
 646 005c 00E0     		b	.L42
 647              	.L39:
 176:../Sources/Lab3.c ****         } else {
 177:../Sources/Lab3.c ****         }
 178:../Sources/Lab3.c ****     }
 648              		.loc 2 178 0
 649 005e DEE7     		b	.L41
 650              	.L42:
 179:../Sources/Lab3.c **** }
 651              		.loc 2 179 0
 652 0060 0837     		adds	r7, r7, #8
 653 0062 BD46     		mov	sp, r7
 654              		@ sp needed
 655 0064 80BD     		pop	{r7, pc}
 656              	.L44:
 657 0066 00BF     		.align	2
 658              	.L43:
 659 0068 00000000 		.word	SoftwareHardwarePrompt
 660 006c 00900440 		.word	1074040832
 661 0070 14000000 		.word	.LC4
 662 0074 10000000 		.word	.LC3
 663              		.cfi_endproc
 664              	.LFE119:
 666              		.section	.text.HardwareCounter,"ax",%progbits
 667              		.align	2
 668              		.global	HardwareCounter
 669              		.thumb
 670              		.thumb_func
 672              	HardwareCounter:
 673              	.LFB120:
 180:../Sources/Lab3.c **** /********************************************************************
 181:../Sources/Lab3.c **** * HardwareCounter() - Counts SW2 presses
 182:../Sources/Lab3.c **** *
 183:../Sources/Lab3.c **** * Description:  A routine that utilizes the Cortex M4's NVIC registers,
 184:../Sources/Lab3.c **** *               by first clearing the pending requests then enabling the requests
 185:../Sources/Lab3.c **** *               to be sent. The background of this process simply checks for the
 186:../Sources/Lab3.c **** *               menu return condition, while "PORTA_IRQHandler" is the foreground
 187:../Sources/Lab3.c **** *
 188:../Sources/Lab3.c **** * Return value: None
 189:../Sources/Lab3.c **** *
 190:../Sources/Lab3.c **** * Arguments:    None
 191:../Sources/Lab3.c **** ********************************************************************/
 192:../Sources/Lab3.c **** void HardwareCounter(void){
 674              		.loc 2 192 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 8
 677              		@ frame_needed = 1, uses_anonymous_args = 0
 678 0000 80B5     		push	{r7, lr}
 679              		.cfi_def_cfa_offset 8
 680              		.cfi_offset 7, -8
 681              		.cfi_offset 14, -4
 682 0002 82B0     		sub	sp, sp, #8
 683              		.cfi_def_cfa_offset 16
 684 0004 00AF     		add	r7, sp, #0
 685              		.cfi_def_cfa_register 7
 193:../Sources/Lab3.c ****     BIOPutStrg(HardwarePrompt);
 686              		.loc 2 193 0
 687 0006 1C48     		ldr	r0, .L51
 688 0008 FFF7FEFF 		bl	BIOPutStrg
 194:../Sources/Lab3.c ****     GpioSw2Init(IRQC_REDGE);    // Enables rising edge interrupts
 689              		.loc 2 194 0
 690 000c 0920     		movs	r0, #9
 691 000e FFF7FEFF 		bl	GpioSw2Init
 195:../Sources/Lab3.c ****     SW2_CLR_ISF();
 692              		.loc 2 195 0
 693 0012 1A4B     		ldr	r3, .L51+4
 694 0014 1022     		movs	r2, #16
 695 0016 C3F8A020 		str	r2, [r3, #160]
 196:../Sources/Lab3.c ****     NVIC_ClearPendingIRQ(PORTA_IRQn);   // Interrupt request queue must be
 696              		.loc 2 196 0
 697 001a 3B20     		movs	r0, #59
 698 001c FFF7FEFF 		bl	NVIC_ClearPendingIRQ
 197:../Sources/Lab3.c ****     NVIC_EnableIRQ(PORTA_IRQn);         // cleared for PORTA
 699              		.loc 2 197 0
 700 0020 3B20     		movs	r0, #59
 701 0022 FFF7FEFF 		bl	NVIC_EnableIRQ
 198:../Sources/Lab3.c ****     INT16U last_count = 0;
 702              		.loc 2 198 0
 703 0026 0023     		movs	r3, #0
 704 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 199:../Sources/Lab3.c ****     hardware_count = 0;
 705              		.loc 2 199 0
 706 002a 154B     		ldr	r3, .L51+8
 707 002c 0022     		movs	r2, #0
 708 002e 1A80     		strh	r2, [r3]	@ movhi
 709              	.L49:
 710              	.LBB3:
 200:../Sources/Lab3.c ****     while(1){                   // Background loop
 201:../Sources/Lab3.c ****         INT16U cur_count = hardware_count;
 711              		.loc 2 201 0
 712 0030 134B     		ldr	r3, .L51+8
 713 0032 1B88     		ldrh	r3, [r3]	@ movhi
 714 0034 BB80     		strh	r3, [r7, #4]	@ movhi
 202:../Sources/Lab3.c ****         if(BIORead() == 'q'){
 715              		.loc 2 202 0
 716 0036 FFF7FEFF 		bl	BIORead
 717 003a 0346     		mov	r3, r0
 718 003c 712B     		cmp	r3, #113
 719 003e 06D1     		bne	.L46
 203:../Sources/Lab3.c ****             BIOPutStrg("\r\n");
 720              		.loc 2 203 0
 721 0040 1048     		ldr	r0, .L51+12
 722 0042 FFF7FEFF 		bl	BIOPutStrg
 204:../Sources/Lab3.c ****             NVIC_DisableIRQ(PORTA_IRQn);
 723              		.loc 2 204 0
 724 0046 3B20     		movs	r0, #59
 725 0048 FFF7FEFF 		bl	NVIC_DisableIRQ
 205:../Sources/Lab3.c ****             return;
 726              		.loc 2 205 0
 727 004c 10E0     		b	.L50
 728              	.L46:
 206:../Sources/Lab3.c ****         } else if(cur_count != last_count){
 729              		.loc 2 206 0
 730 004e BA88     		ldrh	r2, [r7, #4]
 731 0050 FB88     		ldrh	r3, [r7, #6]
 732 0052 9A42     		cmp	r2, r3
 733 0054 09D0     		beq	.L48
 207:../Sources/Lab3.c ****             BIOPutStrg("\rCount: ");
 734              		.loc 2 207 0
 735 0056 0C48     		ldr	r0, .L51+16
 736 0058 FFF7FEFF 		bl	BIOPutStrg
 208:../Sources/Lab3.c ****             BIOOutDecHWord(hardware_count,0);
 737              		.loc 2 208 0
 738 005c 084B     		ldr	r3, .L51+8
 739 005e 1B88     		ldrh	r3, [r3]	@ movhi
 740 0060 9BB2     		uxth	r3, r3
 741 0062 1846     		mov	r0, r3
 742 0064 0021     		movs	r1, #0
 743 0066 FFF7FEFF 		bl	BIOOutDecHWord
 744              	.L48:
 209:../Sources/Lab3.c ****         } else{
 210:../Sources/Lab3.c ****         }
 211:../Sources/Lab3.c ****         last_count = cur_count;
 745              		.loc 2 211 0
 746 006a BB88     		ldrh	r3, [r7, #4]	@ movhi
 747 006c FB80     		strh	r3, [r7, #6]	@ movhi
 748              	.LBE3:
 212:../Sources/Lab3.c ****     }
 749              		.loc 2 212 0
 750 006e DFE7     		b	.L49
 751              	.L50:
 213:../Sources/Lab3.c **** }
 752              		.loc 2 213 0
 753 0070 0837     		adds	r7, r7, #8
 754 0072 BD46     		mov	sp, r7
 755              		@ sp needed
 756 0074 80BD     		pop	{r7, pc}
 757              	.L52:
 758 0076 00BF     		.align	2
 759              	.L51:
 760 0078 00000000 		.word	HardwarePrompt
 761 007c 00900440 		.word	1074040832
 762 0080 00000000 		.word	hardware_count
 763 0084 10000000 		.word	.LC3
 764 0088 14000000 		.word	.LC4
 765              		.cfi_endproc
 766              	.LFE120:
 768              		.section	.text.PORTA_IRQHandler,"ax",%progbits
 769              		.align	2
 770              		.global	PORTA_IRQHandler
 771              		.thumb
 772              		.thumb_func
 774              	PORTA_IRQHandler:
 775              	.LFB121:
 214:../Sources/Lab3.c **** /********************************************************************
 215:../Sources/Lab3.c **** * PORTA_IRQHandler() - Handles PORTA's interrupt requests
 216:../Sources/Lab3.c **** *
 217:../Sources/Lab3.c **** * Description:  This routine counts the IRQ's that will be sent by a SW2
 218:../Sources/Lab3.c **** *               press (effectively counts each SW press).
 219:../Sources/Lab3.c **** *
 220:../Sources/Lab3.c **** * Return value: None
 221:../Sources/Lab3.c **** *
 222:../Sources/Lab3.c **** * Arguments:    None
 223:../Sources/Lab3.c **** ********************************************************************/
 224:../Sources/Lab3.c **** void PORTA_IRQHandler(void){
 776              		.loc 2 224 0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 1, uses_anonymous_args = 0
 780              		@ link register save eliminated.
 781 0000 80B4     		push	{r7}
 782              		.cfi_def_cfa_offset 4
 783              		.cfi_offset 7, -4
 784 0002 00AF     		add	r7, sp, #0
 785              		.cfi_def_cfa_register 7
 225:../Sources/Lab3.c ****     SW2_CLR_ISF();
 786              		.loc 2 225 0
 787 0004 074B     		ldr	r3, .L54
 788 0006 1022     		movs	r2, #16
 789 0008 C3F8A020 		str	r2, [r3, #160]
 226:../Sources/Lab3.c ****     hardware_count++;   // Foreground loop triggered upon IRQ
 790              		.loc 2 226 0
 791 000c 064B     		ldr	r3, .L54+4
 792 000e 1B88     		ldrh	r3, [r3]	@ movhi
 793 0010 9BB2     		uxth	r3, r3
 794 0012 0133     		adds	r3, r3, #1
 795 0014 9AB2     		uxth	r2, r3
 796 0016 044B     		ldr	r3, .L54+4
 797 0018 1A80     		strh	r2, [r3]	@ movhi
 227:../Sources/Lab3.c **** }
 798              		.loc 2 227 0
 799 001a BD46     		mov	sp, r7
 800              		@ sp needed
 801 001c 5DF8047B 		ldr	r7, [sp], #4
 802 0020 7047     		bx	lr
 803              	.L55:
 804 0022 00BF     		.align	2
 805              	.L54:
 806 0024 00900440 		.word	1074040832
 807 0028 00000000 		.word	hardware_count
 808              		.cfi_endproc
 809              	.LFE121:
 811              		.text
 812              	.Letext0:
 813              		.file 3 "c:\\freescale\\kds_3.0.0\\toolchain\\lib\\gcc\\arm-none-eabi\\4.8.4\\include\\stdint-gcc.
 814              		.file 4 "R:\\EE344\\Labs\\Lab3Repo\\Lab3\\CMSIS/MK65F18.h"
 815              		.file 5 "../Sources/MCUType.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Lab3.c
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:21     .text.NVIC_EnableIRQ:00000000 $t
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:25     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:60     .text.NVIC_EnableIRQ:0000002c $d
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:65     .text.NVIC_DisableIRQ:00000000 $t
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:69     .text.NVIC_DisableIRQ:00000000 NVIC_DisableIRQ
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:104    .text.NVIC_DisableIRQ:00000030 $d
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:109    .text.NVIC_ClearPendingIRQ:00000000 $t
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:113    .text.NVIC_ClearPendingIRQ:00000000 NVIC_ClearPendingIRQ
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:148    .text.NVIC_ClearPendingIRQ:00000030 $d
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:157    .rodata.CharError:00000000 CharError
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:154    .rodata.CharError:00000000 $d
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:165    .rodata.MenuPrompt:00000000 MenuPrompt
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:162    .rodata.MenuPrompt:00000000 $d
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:173    .rodata.CharOption1:00000000 CharOption1
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:170    .rodata.CharOption1:00000000 $d
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:181    .rodata.CharOption2:00000000 CharOption2
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:178    .rodata.CharOption2:00000000 $d
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:189    .rodata.CharOption3:00000000 CharOption3
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:186    .rodata.CharOption3:00000000 $d
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:197    .rodata.SoftwarePrompt:00000000 SoftwarePrompt
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:194    .rodata.SoftwarePrompt:00000000 $d
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:205    .rodata.SoftwareHardwarePrompt:00000000 SoftwareHardwarePrompt
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:202    .rodata.SoftwareHardwarePrompt:00000000 $d
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:213    .rodata.HardwarePrompt:00000000 HardwarePrompt
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:210    .rodata.HardwarePrompt:00000000 $d
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:221    .bss.hardware_count:00000000 hardware_count
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:218    .bss.hardware_count:00000000 $d
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:224    .rodata:00000000 $d
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:237    .text.main:00000000 $t
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:242    .text.main:00000000 main
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:406    .text.CalcChkSum:00000000 CalcChkSum
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:490    .text.SoftwareCounter:00000000 SoftwareCounter
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:585    .text.SoftwareHardwareCounter:00000000 SoftwareHardwareCounter
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:672    .text.HardwareCounter:00000000 HardwareCounter
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:387    .text.main:000000dc $d
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:401    .text.CalcChkSum:00000000 $t
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:485    .text.SoftwareCounter:00000000 $t
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:572    .text.SoftwareCounter:00000068 $d
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:580    .text.SoftwareHardwareCounter:00000000 $t
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:659    .text.SoftwareHardwareCounter:00000068 $d
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:667    .text.HardwareCounter:00000000 $t
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:760    .text.HardwareCounter:00000078 $d
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:769    .text.PORTA_IRQHandler:00000000 $t
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:774    .text.PORTA_IRQHandler:00000000 PORTA_IRQHandler
C:\Users\needlea2\AppData\Local\Temp\2\ccVPyDI2.s:806    .text.PORTA_IRQHandler:00000024 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.984e0eb9c436e6355edc0c15c5d0e316
                           .group:00000000 wm4.MK65F18.h.88.5a87102c5ae84e796ad9a9d4464add2f
                           .group:00000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:00000000 wm4.MK65F18.h.101.f25d722507d56a43c64dd0a4bd7a5491
                           .group:00000000 wm4.core_cm4.h.43.2c09f0fcaaed3bb5f3b9ab18546b570c
                           .group:00000000 wm4.core_cmInstr.h.39.c66a1c911732cf6be44e58f2bee25308
                           .group:00000000 wm4.core_cm4_simd.h.43.bf657009d9c246d6ac6e7b120cdd899a
                           .group:00000000 wm4.core_cm4.h.196.3619de371a4f0fc7a1d8fbc60105c36c
                           .group:00000000 wm4.system_MK65F18.h.86.82b4026cc9cfc80560089b2cb91b3357
                           .group:00000000 wm4.MK65F18.h.375.844d7b6b5fc479e2554e03026fdf0451
                           .group:00000000 wm4.MCUType.h.16.8f8f3202c3b2c0f354d42b0ca7c7a208
                           .group:00000000 wm4.K65TWR_GPIO.h.8.495b82b8aa63ca709fcf4830c2d45e3a

UNDEFINED SYMBOLS
BIOOpen
BIOPutStrg
BIOOutHexWord
BIOOutHexHWord
BIOGetChar
GpioSw2Init
BIOOutDecHWord
BIORead
